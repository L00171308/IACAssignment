AWSTemplateFormatVersion: 2010-09-09

#this contains all the parameters to be used later in the template
Parameters:

  #This sets the image of the instances
  AMI:
    Description: Please enter your image string
    Type: String
    Default: ami-015232c01a82b847b

  # This sets the ip range of the virtual private cloud
  VpcRange:
    Description: Please enter the IP range for this VPC
    Type: String
    Default: 10.7.1.0/28

  PubSubnet:
    Description: Please enter the IP range for the public subnet
    Type: String
    Default: 10.7.1.0/30

  #This section is for the name of the Database for the web server that we will use
  WSDBName:
    Default: CustomerDB
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is for the name of the Database for the Management Server that we will use
  MSDBName:
    Default: employeeDB
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.


  #This section is to create a user for the DB of the webserver
  WSDBUser:
    Default: admin
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to create a password for the User of the webserver above
  WSDBPass:
    Default: admin
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to create a Root password for the Database of the webserver
  WSDBRootPass:
    Default: P13as3H31p
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to create a user for the DB of the webserver
  MSDBUser:
    Default: admin
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to create a password for the User of the webserver above
  MSDBPass:
    Default: admin
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to create a Root password for the Database of the webserver
  MSDBRootPass:
    Default: P13as3H31p
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric characters.

  #This section is to specify what instances we will be using for the Web Server
  WSInstanceType:
    Description: Web Server EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
    ConstraintDescription: must be a valid EC2 instance type.

  #This section is to specify what instances we will be using for the local Server
  LSInstanceType:
    Description: Local Server EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

  #This section is to specify what instances we will be using for the Management server
  MSInstanceType:
    Description: Management Server EC2 instance type
    Type: String
    Default: t2.nano
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

  #This section is to specify where ssh requests can come from to access the ec2 instance
  SSHLocation:
    Description: 'The IP address range to be used to SSH to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: please enter a valid IP CIDR.

  #This section is to spesify where TCP requests can come from to access the ec2 instance
  TCPLocation:
    Description: 'The IP address range that can be used to TCP to the EC2 instances'
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: please enter a valid IP CIDR.

Resources:
  #This is the virtual private cloud (VPC) instance
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: VpcRange

  #This is the subnet for the VPC instance
  Subnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: PubSubnet

  #This is the gateway to allow access on the internet
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:

  #This section is ued to link the Gateway to the VPC instance
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  #This is the RouteTable to control where
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC

  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable

  #This section is ued to link the route table to the subnet
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref Subnet
      RouteTableId: !Ref RouteTable

  #The elastic ip address that will be used with the web server
  IPAddress:
    Type: 'AWS::EC2::EIP'
    DependsOn: AttachGateway
    Properties:
      Domain: vpc
      InstanceId: !Ref WebServerInstance

  #This is the webserver of the mom and pop store, it will handle online purchasing
  WebServerInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    MetaData:
      configSets:
        InstallAndRun:
          - Install
          - Configure
      Install:
        packages:
            yum:
              mysql: []
              mysql-server: []
              mysql-libs: []
              httpd: []
              php: []
              php-mysql: []
          files:
            /var/www/html/index.php:
              content: !Join
                - ''
                - - |
                    <html>
                  - |2
                    <title>Mom and Pop INC.</title>
                  - |2
                    </head>
                  - |2
                    <body>
                  - |2
                    <h1>Mom and Pop INC. home page</h1>
                  - |2
                    <p>Cras vulputate, nibh quis auctor semper, tellus quam porttitor nunc, nec congue nisl libero ac erat. Proin placerat tortor eu tincidunt sollicitudin. Vestibulum nibh ex, feugiat sit amet ullamcorper nec, volutpat non mauris. Sed sit amet massa et dolor gravida placerat faucibus a neque. Vivamus ac urna at massa scelerisque consectetur quis eu diam. Curabitur vulputate leo blandit, pharetra ipsum sed, molestie felis. In cursus finibus ante, eu dapibus nibh tempor et. Mauris iaculis mi at mauris fringilla, at ullamcorper ipsum faucibus. Curabitur eu eleifend eros. Curabitur aliquet aliquet lacinia.</p>
                  - |2
                    </body>
                  - |2
                    </html>
                  - |2
            /tmp/setup.mysql:
              content: !Join
                - ''
                - - 'CREATE DATABASE '
                  - !Ref WSDBName
                  - |
                    ;
                  - 'GRANT ALL ON '
                  - !Ref WSDBName
                  - .* TO '
                  - !Ref WSDBUser
                  - '''@localhost IDENTIFIED BY '''
                  - !Ref DBPassword
                  - |
                    ';
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'
              httpd:
                enabled: 'true'
                ensureRunning: 'true'


      Configure:
        commands:
            01_set_mysql_root_password:
              command: !Join
                - ''
                - - mysqladmin -u root password '
                  - !Ref WSDBRootPass
                  - ''''
            02_create_database:
              command: !Join
                - ''
                - - mysql -u root --password='
                  - !Ref WSDBRootPass
                  - ''' < /tmp/setup.mysql'

    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup



  #This is the webserver of the mom and pop store, it will handle interactions betwwen the store
  LocalServerInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref ISSGroup

  #This is the Management Server of the mom and pop store, it will handle anything to do with the manitence of the business
  ManagementServerInstance:
    Type: 'AWS::EC2::Instance'
    DependsOn: AttachGateway
    MetaData:
      configSets:
        InstallAndRun:
          - Install
          - Configure
      Install:
        packages:
            yum:
              mysql: []
              mysql-server: []
              mysql-libs: []
          files:
            /tmp/setup.mysql:
              content: !Join
                - ''
                - - 'CREATE DATABASE '
                  - !Ref MSDBName
                  - |
                    ;
                  - 'GRANT ALL ON '
                  - !Ref MSDBName
                  - .* TO '
                  - !Ref MSDBUser
                  - '''@localhost IDENTIFIED BY '''
                  - !Ref MSDBPass
                  - |
                    ';
              mode: '000400'
              owner: root
              group: root
          services:
            sysvinit:
              mysqld:
                enabled: 'true'
                ensureRunning: 'true'


      Configure:
        commands:
            01_set_mysql_root_password:
              command: !Join
                - ''
                - - mysqladmin -u root password '
                  - !Ref MSDBRootPass
                  - ''''
            02_create_database:
              command: !Join
                - ''
                - - mysql -u root --password='
                  - !Ref MSDBRootPass
                  - ''' < /tmp/setup.mysql'

    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref ISSGroup



  #This is the security group that pertains to the web server that will lik to the outside world
  WSSGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: external port and IP rules
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: !Ref TCPLocation

  #This is the security group that pertains to the two or more internal servers that will be not exposed to the general public
  ISSGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Internal port and IP rules
      SecurityGroupIngress:
        - IpProtocol: ssh
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref SSHLocation

Output:
  WebsiteURL:
    Description: URL for the webserver
    Value: !Join
      - ''
      - - 'http://'
        - !GetAtt
          - WebServerInstance
          - PublicDnsName
